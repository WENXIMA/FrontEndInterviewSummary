React:

-useEffect Method
    - useEffect(()=>{},[]). Render ONLY once after the inital render of the component.

-React re-render() when: 1. state update
                        2. props update
                        3.parent component has been re-render

-memo() => higher order component
    - React will skip rendering the component, re-use last rendered result
    -ONLY check props component


1. What is React Hooks?   What is the pros and cons? 
    -Ans: React Hook:
          React Hook allow developer hooked in React state and life cyle function.Such as useState,useEffect
          React Hook allow developer use state and other react features without writing Class
          Makes the related part in each component to smaller part

          Pros:
                -Easier to test and work with, easy to read.
                -Create re-usable component to avoid redunant logic
          Cons:
                -hooks do not allowed to mix old classes of component.
                -Do not have a way to attach reusable behavior to reusable state
2. What is useEffect, useState, useContext?
      - useEffect:
                -  useEffect will triggerd by every render. So Every time the page has been render, useEffect will be trigged to exectued side Effect.
                -  It may contain 2 index, Once the second index has been changed, then the system will execute the side function to re-render.
                - If 2nd index is empty array, then it will means that this useEffect will only render once.
               
      - useState: 
                - return state and stateUpdate function
                - In the beginning of render, it will return state and initialState
                - setState are using to update state. It will receive a new state and re-join the render queue
                - In later render queue, useState return first value will always be the newest state(has been updated)
        
        -useContext:
                - React is 1 way data-flow, it only can pass data from props 1 by 1.
                - Use useContext to create a context in component which needs to pass the data.
                - If the data need to pass, then we need to have a context Name with provider including the child component/value. and in the context.provider tag, we also need a value attribute to pass data.
                - The component which accpeting data needs to import the context to use context.consumer to receive it, it possible to receive a function

3. How could you do to improve performance in React?
        - Using React.PureComponent, React.memo, React.shouldComponentUpdate
                - PureComponent will shallow compare to props and state
                - Memo will shallow compare for props.
                -shouldComponentUpdate will figure state and props updated. If updated return true, Otherwise return false.

4.What is React fiber? 
        - The core of work is destructure one work to a lot of ones and switch between them to complete.
        - Fiber is a JS object.
        -Fiber improves performance, better suitability for advanced UI.

5.What is Virtual DOM?
        - Virtual DOM is a programming concept. UI is store in memory by ideal. Using ReactDOM to sync with Real DOM.
        - Virtual DOM gives React delcartive API which means what types UI does developer want, React will make sure the DOM match this state.

6.What is Higher Order Component?(HOC)
        - HOC transform component into another component.
        - HOC is function and take component and return a new component.
        - Each HOC will not dependent to another HOC.
        - Poorly readable.
        - props change every time, it will re-render again. Hence, it probably has performace issues.

7.What is Pros and Cons of Redux?
        -Redux is similar to useContext. Redux is a library that using action to manage and control state.
        - Pros:
        -No longer to write many state controls to manage state for each function.
        - state is immutable
        - Easier to test
        - 1 state for entire application
        - Cons:
        - Re-render all component once state changes.
        - Over use memory.
        - Remember I was using redux to doing state management for shopping cart, User can add/remove items from actual shopping page, 
        - and there is a short summary of your shopping cart in right corner. User also can modifiy their shopping cart through toggle window in navigation bar.
        - And, finally when they got into the payment page, they also can modifiy their shopping cart state.
        - So, I would choose Redux instead of useContext to update and manage the shopping cart state in 3 different places.
        - But, I would like to use useContext to manage the authentication method during the project. Because, there are only sign in/ reigster and log out.
        - We do not need to use redux. It much more easier way to manage the user state at this time.

8. What is React SSR? 
        - There are 2 types render way of React:
                - SSR:
                        - Broswer request HTML
                        - Page can be viewed but not avaiable.
                        - Broswer request JS.
                        - Page are avaiable.
                - CSR:
                        - Borswer request HTML
                        - Broswer request JS
                        - React initialization, listen event
                        - Page avaiable
                -Pros of SSR:
                        - Faster than CSR, It will be faster than CSR in the first render. Because, SSR only need to request 1 HTML to show entire page.
                        - Use SSR in first render, other than that we will choose CSR
                -Cons of CSR:
                        - Server side are under pressure(facing HTML render and data request)
                        - Higher study cost, more complexity.
                
Vue:
    1. What is LC of Vue?
            - beforeCreate->Create->beforeMount->Mounted->BeforeUpdate->Updated->BeforeUnmounted->Unmounted
    2. What is keep-alive in Vue?
            - keep-live is build-in component which allows developer to conditionally cache component instance when dynamically switching between multiple componenets.
            - For example, I built a coach finder app with vue in before, user can contact their interests coach by enter basic information.
            - So, I keep the contact page keep-alive for just in case, user forget coach's information to take a look and switch back, the previous information which they enter are still in there.

JavaScript:
      Method:
        - sort() Method
        - Array.sort((a,b) => {a-b}) 
        - This method allow sort array as ascending order

    -forEach() Method
        - forEach similar to forLoop
        -Can not modify the sets in the object
        -forLoop can receive the index

    -concat() Method
        - Merge 2 array into 1 Array
        -Time complexity O(N)
    
    -splice() Method
        - splice(start,deleteCount,InsertItem);
        -months.splice(4, 1, 'May');
        - replaces 1 element at index 4
    
    GET vs POST:
        - POST are focus on CRUD function. GET is READ ONLY.
        - POST do not have restrict while passing the index from URL. GET do have limit
        - POST will not pre-load by browser unless manually set up. GET will pre-load by broswer.
    
    Set Method:
        - Set allow store UNIQUE of any types data(ONLY DATA).
        - Set.add -> add element to end of Set
        - Set.clear -> clear all element of this Set
        - Set.delete(value) -> Delete value from Set, Return boolean value.
        - Set.has() -> Return boolean value to check this value exists or not.
    
    Map vs Object vs Set vs Array
        - Array: It is not basic type of JavaScript. Size are flexble, it can contain different types of data. copy array is shallow copy.
        - Map: Collections of key-value pairs. A key only occur in Map once. Map is ordered and iterable
        -Object: It is similar to map. But the difference is object is not ordered and iterable
        -Set: Set are collections of values. A value may ONLY occur once in the Set.


1. VAR vs LET vs CONST:
        - variable scope is different.
        - talk about your general rule on which to use in common cases. 
            (let are defined inside of function which this variable only called inside of function, const are usually store array object, not use var usually.)
        - VAR can be re-delcared and updated
        - LET is block scope, can be updated but NOT re-declared
        - const can not be updated or re-declared.
            -if const store object, even though we can not updated. but, we can update the attribute of the object.

2. Explain 'async' and 'await'
        - it allow us to write more eaiser method based on Promise async.
            -Return Promise.
        - When function executed, it will return when meet the await.After complete the async, then continue the function. (Most likely, jump out of async function, give the thread temporarily ) 
        - I use promise to set up the firebase Auth Method
            - For example, when user want to sign out, then it will call the signOut Method.
               This signOut method is async function which it will await for firebase signOut(method) to be called,
               after firebase signOut has been called, this function will be execute
               
3. Deep Copy vs Shallow Copy
        - Deepy Clone means that all values of the variables are copied and disconnected from the original variable.
        - Shallow Copy means that certern values are still connected to the original variables. Create a new Object, Copy data types/store address. ONLY clone object space not resource

4.What is Event Delegation?
        - Event Delegation can aviod too many event listeners.
        - It is process of using single event listener from parent element  to manually delegation to child element instead of using event listener in every child element.

5.Difference between map and forEach?
        - map are similar to forEach method: Executes the provided function once for each element in array.
        -But unlike the forEach, it creates a new array to store the results.

6. How does instanceOf works? Difference with TypeOf.
        - InstanceOf checks the prototype of constructors from bottom to top until it meet null. 
        - typeOf can not figure out the object, array, and null. It will return OBJECT when typeOf meet those 3 types.
        -instanceOf is able to figure out type of object, array and null. But instanceOf can not figure the basic type of data.

7. Explain 'new' operator in JS. (01-04, Question 60)
        - Create a value of object is null and set the prototype chain is null.
        - Using apply to use the constructor function, and point THIS to the object just created.
        - modified the proto of object, point constructor's prototype.
        - If there is a value can be return then return it, otherwise return object. 

8. Explain Event Loop?
        - JavaScript is single thread. Broswer is multi-thread.
        - All synchronous are execute in main thread. Generate a execution stack.
        - Other than main thread, There is a task queue. Once the async task has the result, then it will be marked in task queue.
        - Read the task queue after main thread complete all tasks. Event loop will clear the microtask.
        - It will goes in macrotask after the microtask has been clear. Pick the first task into stack to execute. After executed,
            - Check the microtask again, if there still has more tasks then clear microtask. Repeat this step until all tasks has been completed.

9. Explain microtask and macrotask
        - macrotask: event are waiting for execution in the task queue. macrotask will create a new stack while it executing task. After the macro task completed. this stack will destoryed as well. (setInterval, setTimeOut)
        - microtask: Trade it like a async function. It will execute before macrotask complete and after main function executed.

10.Debounce and Throttle.
        - Debounce: Debounce only execute the latest time. Debounce will not execute later function after the function has bounce in set time.(Using setTimeOut, clearTimeOut)
        - Throttle: Throttle will control times of execution. 

11. NodeJS pros and cons:
        - Pros: 
                -Develop based on JavaScript, its easier to learn
                -NPM package is powerful tool to make development process easier
                -Share same pieces of code with client and server side
        -Cons:
                - NodeJS does not provide scalability
                - Its hard to connect with relational db.

12.How garbage collection works in JS?
        - garbage collection works automatically, we can not force/prevent it.

13.What is memory leak? How to debug and prevent it?
        - Memory is not needed by web application any more, but for some reason it does not return to pool of memory.
        - using Chrom Dev Tools to debug and prevent it.

14.What are WeakSet and WeakMap?
        - WeakSet can not traverse, only store data of object type. It will not stop the garbage collection to collect object from WeakSet.
        - WeakMap is only receive object as key. can not traverse as well.

15.When do we need strict mode?
        - strict mode indicate that code can not use undeclared variables.
        - When we are complie old JavaScript code.
        - The JavaScript code genereated by 3rd party.
        - Different version and types of broswer

16.What is difference between setTimeOut and setInterval?
        - setTimeOut will run function ONCE after the interval of time.
        - setInterval will run function repeatedly starting after the interval of time then, repeating continuously at that interval.

17. 

CSS:


1. What is CSS box model?
      - 2 types of box: block box and inline box
      - block box: Every box will change the line, padding, margin and border will push other element away. Width and height are works under block box.
      - inline box: Box will not change the line. Width and height will not works. Vertical padding, margin and border will works and not push away other inline box. but horizontal will push away other inline box
      -box sizing attribute
            - content box: 
            - border-box: set height and width of element
            -inherit: inherit parent element box-sizing value

2. Implement a 2 Grid:
    - set a parent class and two box are inside of this div
    - set parent div display: flex
    - set height and width of two box and set second box flex:1

3.Explain how different CSS 'position' porperty worked.
    - position have static, absolute, relative, fixed and sticky.
    - static: do nothing.
    -relative: Delete from document flow,  it stay at his place. the element still can move top/bottom/left/right by its place.
    - absolute: removed from document flow, but it losts his place. Move it by top/bottom/left/right by parent which has relative rule. Create a new stacking context when value of z-index is not auto.
    - sticky: positioned according to the flow of the document. Stick it to speific corrdinates. it lives inside of parent and moves with parent element.
    -fixed: removed from document flow as well. position relative to the initial containing block established by viewport. 

4. Difference between block and inline.
    - Display block: Goes vertically, get the all width, width/height can be settled.
    - Display inline: Goes horizontally, width/height equal to content. width/height can not be settled.

5.What is Pesudo-Class and Pesudo-Element?
        - Pesudo-Class is key word added to a selector that specifies a special state of the selected elements. such as :hover/:enabled
        - Pesudo-Element is key word added to selector that lets you style specifies part of the seleceted elements, such as p::first-line

6. How to implement lazy load for images?
        - using attribute loading and set the value is lazy

7.How does @import works in CSS? What is the pros and cons
        - In CSS file, if there are many @imports.
                - Then, the system will download the parent file first and then it will download these import file later
        Pros:
                - Make code more readable. Do not need to write same code for each files.
                - It provide help when building medium to large website, because there are too many information. It could be messed up. using @import to aviod this kind situation
        Cons:
                - @import will increase the loading page time.   

8. How to create triangles with CSS?
        - border width: 0; height: 0; border-left: 50px solid transparent; border-right: 50px solid transparent; border-bottom: 50px solid red; margin: 2rem
        

Web:

1. What is webSocket?
      - Implement two way communication between Client side and server side such as passing data.
      -pros: 
            - No same resouce limitation
            - Two way communication
      - cons:
            - more stable code in back end.
            - higher cost for maintance.

2.How HTTP works? What is HTTP/2?
        - HTTP is a protocol for fetching resource such as HTML document.
        -It is the foundation of any data exchange on Web. It is a client serve portocol which means it require a initiated by the recipient.
        -HTTP/2 makes our application faster, simpler. The primary goals for HTTP/2 are to reduce latency by enabling full request and response multiplexing., minimize protocol.

3. Explain connection: Keep-alive
        - Keep alive: keep this page active, the input content will not removed after user transfer to other page.

4.What happens when you type in a URL.
        - Enter a URL into web broswer.
        - Browser looks up the IP address for the domain name via DNS.
        - Broswer will send HTTP request to server
        - Server send back HTTP response
        - Broswer begin rendering in HTML
        - Broswer send request for additional objects embedded in HTML such as JS and CSS. Repeat Send request from broswer to server. And server send the response back to broswer. And Render HTML again.
        - After page loaded, broswer send further async request as needed.

5.What is HTTP cache? How does it works?
        - Large responsive needs to return between broswer and server side
        - It will not load before all key resources has been download.
        - All HTTP request will transfer to broswer cache to check satsify the condition for avaiable cache response. If matched, then get the response from cache to reduce the internet delay and transfer cost.
        
6. What is CDN?
        - CDN allow transfer and load needed resource for broswer content inclduing HTML, JS. Bootstrap offer CDN link to allow developer use their library easier.

7.How to detect crash of web page?
        -Generally, onBeforeUnload() will know right before a page unloaded. 
        -But when web page crash, JS can not run. So, Using service worker to ping the main thread. trigger a dialog to ask user want to leave or not. 

8.Common question: What is CSRF? How to prevent it?
        - Cross site request forgency is use to send malicious request from authenticated user to web application.
        -When user send request, attackers can lanuch CSRF to attack that abuse the trust between user and web server.
        -How to prevent: 
                - Implement anti-CSRF token.
                -Use the SameSite Flag in Cookies.

9.Common HTTP Code:
        - HTTP 100 -> Information response.
        - HTTP 200 -> Successfully response.
        - HTTP 300 -> Redirection response.
        - HTTP 400 -> Client Error.
        - HTTP 500 -> Server Error.           

10. What is XSS?(Cross-site scripting)
        - XSS are allow attackers to inject to website malicious client-side code. 
        - Execute by user, attacker will feak as user to bypass access controls.
        -How to prevent:
                - Safe sink attribute in HTML to treat variables as text and never execute.
                - HTML Sanitization strip dangerous HTML from variable and return a safe string of HTML

11.What are Web Worker and Service Worker?
        - Web Worker means for web content run scripts in background threads.
                -The worker thread can perform tasks without interfering with the UI.
        - Service Worker: act as proxy servers that sit between application, broswer and network.

12.What is Webpack loader and plugin?
        - Loader is function, only cares about input and output.
                - Loader works between generating bundle and before generateing it.
                - Does not dependent Event
        - Plugin is a class
                - Plugin works ends of bundle generate.
                - Plugin dependent on events.

13. Explain Common HTTP request methods? What they used for?
        - GET: request representation of speific data.
        - POST: submit entire specified resource to server. Often change the state.
        - PUT: Replace all current representation of the target resource with request payload
        - PATCH:  Applies all partical modification to resource
        - DELETE: Delete speific resources

General: 

1.  Tell us the difference between common image format on the web
        - PNG:
        - JPG:
        - JPEG:
        - WEBP:

2.Explain Proxy Pattern, Decorator Pattern, Factory Pattern, Observer Pattern

3.How do you do unit test/ EndToEnd test in your web projects?
        - React-Testing-library
        - JestJS
        - End to End test means that we need to test entire web application from view of user.
                - Analyze requirements
                - Set up test environment
                - Analyze software and hardware requirements.
                - List down what system needs to respond.
                - List testing methods required to test
                - Design test cases
                - Run test
        - Unit Test
                - Initialize small pieces of an application which wants to test
                - Calling method
                - Observes the resulting behavior

4.How do you do SEO in your porject?
        - Set goals with clients
        - Identify what need to achieve goal
        - Take a brief outline for task which we need to complete.
        - Track projects progresss.
        - For SPA SEO:
                - We need to use server-side rendering or pre-rendering
                - Then we need to use SEO friendly URL.
                - Last, we will need to test SPA SEO.

